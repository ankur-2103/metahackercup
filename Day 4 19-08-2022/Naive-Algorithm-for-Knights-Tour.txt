Problem Statement:
Given a N*N board with the Knight placed on the first block of an empty board. Moving according to the rules of chess knight must visit each square exactly once. Print the order of each cell in which they are visited.

Example:

Input : 
N = 8

Output:
0  59  38  33  30  17   8  63
37  34  31  60   9  62  29  16
58   1  36  39  32  27  18   7
35  48  41  26  61  10  15  28
42  57   2  49  40  23   6  19
47  50  45  54  25  20  11  14
56  43  52   3  22  13  24   5
51  46  55  44  53   4  21  12

Time Complexity : 
There are N^2 Cells and for each, we have a maximum of 8 possible moves to choose from, so the worst running time is O(8^N^2).

Auxiliary Space: O(N^2)

Note that Backtracking is not the best solution for the Knight’s tour problem. See Warnsdorff’s algorithm for Knight’s tour problem for other better solutions. The purpose of this post is to explain Backtracking with an example. 


